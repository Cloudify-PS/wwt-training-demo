tosca_definitions_version: cloudify_dsl_1_3


description: >
  The blueprint first installs the VM in a separate deployment
  to connect it then with the web application installed using
  the Ansible playbook here.


imports:
  - https://cloudify.co/spec/cloudify/5.1.0/types.yaml
  - includes/hello-world-ansible.yaml


inputs:

  # PUT MISSING INPUT HERE

  agent_user:
    description: >
      The username of the agent running on the instance created from the image.
    type: string
    default: 'ubuntu'

  agent_key_name:
    type: string
    default: agent_key

  external_network_id:
    type: string
    description: A network that provisions floating IPs.
    default: { get_secret: external_network_name }

  image_id:
    type: string
    description: The UUID of an Ubuntu Trusty 14.04 image in your Openstack account.
    default: { get_secret: ubuntu_trusty_image }

  flavor_id:
    type: string
    description: The UUID of small flavor in your Openstack account.
    default: { get_secret: small_image_flavor }

  network_id:
    type: string
    description: A name for your new Openstack Network.
    default: { get_secret: public_network_name }

  subnet_id:
    type: string
    description: A name for your new Openstack Subnet.
    default: { get_secret: public_subnet_name }


node_templates:

  vm:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        # FILL THE RESOURCE CONFIG CORRECTLY


groups:
  vm_and_app:
    members: [vm, hello-world]


policies:
  scale_policy:
    type: cloudify.policies.scaling
    properties:
      default_instances: 1
    targets: [vm_and_app]