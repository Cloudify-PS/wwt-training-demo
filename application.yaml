tosca_definitions_version: cloudify_dsl_1_3


imports:
  - https://cloudify.co/spec/cloudify/5.2.2/types.yaml
  - plugin:cloudify-ansible-plugin


inputs:

  infrastructure_deployment_id:
    type: string
    description: >
      ID of the deployment, which provides the VM infrastructure


node_templates:

  vm:
    type: cloudify.nodes.Compute
    properties:
      ip: { get_capability: [{ get_input: infrastructure_deployment_id }, vm_ip] }
      agent_config:
        install_method: none
        user: { get_capability: [{ get_input: infrastructure_deployment_id }, vm_user] }
        password: { get_capability: [{ get_input: infrastructure_deployment_id }, vm_password] }

  application:
    type: cloudify.nodes.ansible.Executor
    properties:
      run_data:
        IP: { get_property: [vm, ip] }
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: ansible.cloudify_ansible.tasks.run
          inputs:
            playbook_source_path: https://github.com/Cloudify-PS/wwt-training-demo/archive/refs/heads/ansible.zip
            playbook_path: start.yaml
        stop:
          implementation: ansible.cloudify_ansible.tasks.run
          inputs:
            playbook_source_path: https://github.com/Cloudify-PS/wwt-training-demo/archive/refs/heads/ansible.zip
            playbook_path: stop.yaml
    relationships:
      - type: cloudify.ansible.relationships.connected_to_host
        target: vm


capabilities:

  app_url:
    description: URL of the web application
    value:
      concat:
        - "http://"
        - { get_property: [vm, ip] }